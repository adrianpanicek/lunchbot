service: place-app
provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  memorySize: 128
  logs:
    websocket: true
  environment:
    REGION: ${self:provider.region}
    ENVIRONMENT: ${self:provider.stage}
    TABLE_PREFIX: ${self:service}-${self:provider.stage}-
    TOKEN_SECRET: mysecret # Only for the dev environment
    TOKEN_EXPIRATION: 7d
    WS_DOMAIN: f5kz3nnd1m.execute-api.eu-west-1.amazonaws.com #TODO: this is temporary hack
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
      - dynamodb:CreateTable
      - dynamodb:GetRecords
      - dynamodb:GetShardIterator
      - dynamodb:ListStreams
    Resource: "arn:aws:dynamodb:*"

app: place
tenant: adrianpanicek

plugins:
  - serverless-domain-manager
  - serverless-offline
  - serverless-webpack

functions:
  authorizer:
    handler: src/authorize.handle

  login:
    handler: src/action/user/login.handle
    events:
    - http:
        path: login
        method: post
  refresh_token:
    handler: src/action/user/refresh_token.handle
    events:
    - http:
        path: refreshToken
        method: post
  register:
    handler: src/action/user/register.handle
    events:
    - http:
        path: register
        method: post

  color_change:
    handler: src/action/color/change.handle
    events:
    - http:
        path: color
        method: post
        authorizer: authorizer
  stream_color_change:
    handler: src/function/streamColorChange.handle
    events:
    - stream:
        type: dynamodb
        arn: 'arn:aws:dynamodb:eu-west-1:931836277659:table/place-app-dev-colorChanges/stream/2019-10-26T16:07:53.954'
  color_map_projection:
    handler: src/function/colorMapProjection.handle
    events:
    - schedule: rate(5 minutes)

  connection_connect:
    handler: src/action/connection/connect.handle
    events:
    - websocket:
        route: $connect
  connection_disconnect:
    handler: src/action/connection/disconnect.handle
    events:
    - websocket:
        route: $disconnect

custom:
  customDomain:
    domainName: place.panicek.com
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: 'regional'
  webpack:
    webpackConfig: 'webpack.config.js'   # Name of webpack configuration file
    includeModules: true
    packager: 'npm'

package:
  individually: true