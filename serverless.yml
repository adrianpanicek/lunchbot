# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: alias-app

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-west-1
  memorySize: 512
  environment:
    TOKEN_SECRET: mysecret # Only for the dev environment
    TOKEN_EXPIRATION: 7d
    TABLE_ALIASES: ${opt:stage, 'dev'}-aliases
    TABLE_USERS: ${opt:stage, 'dev'}-users
  iamRoleStatements:
  - Effect: "Allow"
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - "Fn::GetAtt": [ Aliases, Arn ]
      - "Fn::GetAtt": [ Users, Arn ]

app: alias
tenant: adrianpanicek

plugins:
  - serverless-webpack

functions:
  login:
    handler: src/user.login
    events:
      - http:
          path: login
          method: post
  authorize:
    handler: src/user.authorize
  register:
    handler: src/user.register
    events:
      - http:
          path: register
          method: post

  get_aliases:
    handler: src/alias.get
    events:
      - http:
          path: aliases
          method: get
          request:
            parameters:
              querystrings:
                aliasName: true
  add_access_token:
    handler: src/alias.addAccessToken
    events:
      - http:
          path: /aliases/{id}/accessTokens
          method: POST
          request:
            parameters:
              paths:
                id: true

custom:
  tableLimits:
    dev:
      read: 1
      write: 1

resources:
  # DynamoDB
  - ${file(config/resources/dynamodb-tables.yml)}